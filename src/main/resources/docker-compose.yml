version: '3'

services:
  nginx:    # 服务名称  用户自定义
    container_name: nginx-docker        # 指定容器的名称
    image: nginx:1.21.6   # 镜像版本
    ports:
      - 80:80     # 暴露端口
    volumes:      # 挂载
      - /root/nginx/html:/usr/share/nginx/html
      - /root/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /root/nginx/log:/var/log/nginx  #日志文件挂载
    privileged: true  # 这个必须要，解决nginx的文件调用的权限问题
    links:  #容器之间访问
      - cms
  mysql:
    container_name: mysql-docker        # 指定容器的名称
    image: mysql:8.0
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    ports:
      - 3306:3306
    environment:    # 指定 root 用户的密码
      - MYSQL_ROOT_PASSWORD=Lx753369
    volumes:
      - /root/service/mysql/data:/var/lib/mysql           # 挂载数据目录
      - /root/service/mysql/config:/etc/mysql/conf.d      # 挂载配置文件目录
      - /root/service/mysql/log:/var/log/mysql            #日志文件挂载
    privileged: true
  redis:
    container_name: redis-docker        # 指定容器的名称
    image: redis:6.2.6
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    ports:
      - 6379:6379
    privileged: true
    volumes:
      - /root/service/redis/data:/data
      - /root/service/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - /root/service/redis/logs:/logs
  cms:
    container_name: cms-docker        # 指定容器的名称
    image: cms:latest
    build: .    # 表示以当前目录下的Dockerfile开始构建镜像
    ports:
      - 9090:9090
    volumes:
      - /root/service/app/logs:/app/logs
    privileged: true
    depends_on:   # 依赖于mysql、redis，其实可以不填，默认已经表示可以
      - mysql
      - redis
